@page "/AccountLogin"
@page "/AccountLogin/{ErrorRedirected}"
@inject LoginState LoginState
@inject NavigationManager navigationManager

<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <section>
            <h4>
                Use a local account to proceed.
            </h4>
            <hr />
            @if (!string.IsNullOrEmpty(LoginState.SuccessReturn))
            {
                <div class="alert alert-success" role="alert">
                    @LoginState.SuccessReturn
                </div>
            }
            @if (LoginState.ErrorReturn.Count > 0)
            {
                <div class="alert alert-danger" role="alert">
                    <ul>
                        @foreach (var error in LoginState.ErrorReturn)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
            <EditForm Model="LoginState.Input" OnSubmit="SignUp">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>Email: </label>
                    <InputText class="form-control" @bind-Value="LoginState.Input.Email" />
                    <ValidationMessage For="@(() => LoginState.Input.Email)" />
                </div>
                <div class="form-group">
                    <label>Password: </label>
                    <InputText type="password" class="form-control" @bind-Value="LoginState.Input.Password" />
                    <ValidationMessage For="@(() => LoginState.Input.Password)" />
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label>Remember Me: </label>
                        <InputCheckbox @bind-Value="LoginState.Input.RememberMe" />
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
                <div class="form-group">
                    <p>
                        <NavLink id="forgot-password" href="ForgotPassword">I forgot my password</NavLink>
                    </p>
                    <p>
                        <NavLink href="AccountRegister">I want to sign up!</NavLink>
                    </p>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    [Parameter]
    public string ErrorRedirected { get; set; }

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(this.ErrorRedirected))
            LoginState.ErrorReturn = ErrorRedirected.Split(Environment.NewLine);

        base.OnInitialized();
    }

    public void SignUp()
    {
        navigationManager.NavigateTo($"/login?Email={LoginState.Input.Email}&Password={LoginState.Input.Password}&RememberMe={LoginState.Input.RememberMe}", true);
    }
}
